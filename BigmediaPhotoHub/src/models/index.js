const { Sequelize, DataTypes } = require('sequelize');
const sequelize = require('./sequelize')

// simplified definition of fields
function id (field, opts = {}) {
  return Object.assign({
    type: Sequelize.INTEGER,
    allowNull: false,
    autoIncrement: true,
    primaryKey: true,
    _autoGenerated: true,
    field
  }, opts)
}

const makeFieldFunction = (type) => (field, opts = {}) => Object.assign({ type, field }, opts)
const int = makeFieldFunction(Sequelize.INTEGER)
const smallint = makeFieldFunction(Sequelize.INTEGER)
const tinyint = makeFieldFunction(Sequelize.INTEGER)
const text = makeFieldFunction(Sequelize.TEXT)
const dateonly = makeFieldFunction(Sequelize.DATE)
const blob = makeFieldFunction(Sequelize.BLOB)
const datetime = makeFieldFunction(Sequelize.DATE)
const varchar = makeFieldFunction(Sequelize.TEXT)
const bool = makeFieldFunction(Sequelize.BOOLEAN)
const money = makeFieldFunction(Sequelize.DECIMAL)
const decimal = makeFieldFunction(Sequelize.DECIMAL)
const float = makeFieldFunction(Sequelize.FLOAT)
const real = makeFieldFunction(Sequelize.REAL)
const numeric = makeFieldFunction(Sequelize.DECIMAL)
const uuid = makeFieldFunction(Sequelize.UUID)
const json = makeFieldFunction(Sequelize.JSON)

const AllPhotos = sequelize.define('allphotos', {
  sideId           : int('id_side'),
  sideNo           : int('side_number'),
  faceId           : int('id_face'),
  datePhoto        : datetime('date_photo'),
  path             : varchar('path'),
  path_prev        : varchar('path_prev'),
  source           : varchar('source'),
  weight           : int('weight'),
  selPoints        : varchar('sel_points'),
  photoId          : int('id_photorec'),
  serviceId        : int('id_servoper')
}, {
  tableName: 'v_allphotos'
})

const PhotosPresent = sequelize.define('presentphotos', {
  city             : varchar('city'),
  address          : varchar('address'),
  cathegory        : varchar('cathegory'),
  side_number      : int('side_number'),
  supplier_sn      : varchar('supplier_sn'),
  descr            : varchar('descr'),
  sizetype         : varchar('sizetype'),
  sidetype         : varchar('sidetype'),
  path             : varchar('path'),
  path_prev        : varchar('path_prev'),
  sideId           : int('id_side'),
  faceId           : int('id_face'),
  schem            : blob('schem'),
  schema_url       : varchar('schema_url')
}, {
  tableName: 'v_allphotos_present'
})

const PhotoImage = sequelize.define('photoimage', {
  sideId           : int('id_side'),
  sideNo           : int('side_number'),
  faceId           : int('id_face'),
  datePhoto        : datetime('date_photo'),
  photoId          : int('id_photorec'),
  photo            : blob('photo')
}, {
    tableName: 'v_allblobphotos'
})

const DoorsPhotos = sequelize.define('doorsphotos', {
  doorsNo          : int('doors_no'),
  path             : varchar('path')
}, {
  tableName: 'v_doorsphotos'
})
const Posters = sequelize.define('allposters', {
  subjectId         : int('id_subject'),
  poster            : blob('subject'), 
  IdPoster          : int('id_poster'),
  poster_id         : int('poster_id')
},{
  tableName: 'subjects'
})
const models = {
  AllPhotos,
  PhotoImage,
  DoorsPhotos,
  PhotosPresent,
  Posters
}

module.exports = Object.assign({Sequelize, sequelize}, models)
